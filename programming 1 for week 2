*** PART 1:
* Write a function named 'pollutantmean' that calculates the mean of a pollutant (sulfate or nitrate) across a specified list of
monitors. The function 'pollutantmean' takes three arguments: 'directory', 'pollutant', and 'id'. Given a vector monitor ID
numbers, 'pollutantmean' reads that monitors' particulate matter data from the directory specified in the 'directory' 
argument and returns the mean of the pollutant across all of the monitors, ignoring any missing values coded as NA. 


pollutantmean <- function(directory, pollutant, id = 1: 332) {
  
  ##  > formatC(1:3, width=3, flag ="0")
  ##  [1] "001" "002" "003"  
  
  ## > paste("specdata", "/", "001"  , flag ="0", ".csv", sep="")
  ## [1] "specdata/0010.csv"
  
  data = numeric ()
  for (i in id) {
    
    newread = read.csv(paste(directory, "/", formatC(i, width=3, flag ="0"), ".csv", sep=""))
  
    data = c(data, newread[[pollutant]])
  }
  
  return(mean(data, na.rm= TRUE))
  
}

## should set wd to
## > setwd("C:/Users/I048434/Desktop/Big data/Data Science/02_R programming/programming 1 for week 2")

## execute 
## pollutantmean("specdata", "nitrate", 23)
## [1] 1.281
# 1.2801
## pollutantmean("specdata", "nitrate", 70: 72)
## [1] 1.706
# 1.706
## pollutantmean("specdata", "sulfate", 1: 10)
## [1] 4.064
# 4.064






PART 2:
Write a function that reads a directory full of files and reports the number of completely observed cases in each data file. 
The function should return a data frame where the first column is the name of the file and the second column is the number
of complete cases. A prototype of this function follows

complete <- function(directory, id = 1:332) {
  ## 'directory' is a character vector of length 1 indicating the location of
  ## the CSV files
  
  ## 'id' is an integer vector indicating the monitor ID numbers to be used
  
  ## Return a data frame of the form: id nobs 1 117 2 1041 ...  where 'id' is
  ## the monitor ID number and 'nobs' is the number of complete cases
  nobs = numeric()
  for (i in id) {
    
    newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"), 
                             ".csv", sep = ""))
    nobs = c(nobs, sum(complete.cases(newRead)))
  }
  return(data.frame(id, nobs))
}

> complete("specdata", c(2, 4, 8, 10, 12))
  id nobs
1  2 1041
2  4  474
3  8  192
4 10  148
5 12   96
> complete("specdata", 30: 25)
  id nobs
1 30  932
2 29  711
3 28  475
4 27  338
5 26  586
6 25  463
> complete("specdata", 3)
  id nobs
1  3  243



Part 3:
Write a function that takes a directory of data files and a threshold for complete cases and calculates the
correlation between sulfate and nitrate for monitor locations where the number of completely observed cases
(on all variables) is greater than the threshold. The function should return a vector of correlations for the
monitors that meet the threshold requirement. If no monitors meet the threshold requirement, then the function 
should return a numeric vector of length 0. A prototype of this function follows

corr <- function(directory, threshold = 0) {
 df = complete(directory)
  ids = df[df["nobs"] > threshold, ]$id
  corrr = numeric()
  for (i in ids) {
    newRead = read.csv(paste(directory, "/", formatC(i, width = 3,
                                                     flag = "0") ,
                             ".csv", sep = ""))
    dff = newRead[complete.cases(newRead) , ]
    corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
  }
  return(corrr)
}


> cr <- corr("specdata", 150)
> head(cr)
[1] -0.01895754 -0.14051254 -0.04389737 -0.06815956 -0.12350667 -0.07588814
> summary(cr)
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.21060 -0.04999  0.09463  0.12530  0.26840  0.76310 
> 
